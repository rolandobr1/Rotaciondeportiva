// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Proporciona sugerencias de equilibrio de equipos impulsadas por IA basadas en asignaciones manuales.
 *
 * - getTeamRecommendation - Una función que toma las asignaciones de jugadores y sugiere ajustes de equilibrio.
 * - GetTeamRecommendationInput - El tipo de entrada para la función getTeamRecommendation.
 * - GetTeamRecommendationOutput - El tipo de retorno para la función getTeamRecommendation.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GetTeamRecommendationInputSchema = z.object({
  team1Players: z
    .array(z.object({name: z.string(), winRate: z.number()}))
    .describe('Los jugadores actualmente asignados al equipo 1, con sus tasas de victoria.'),
  team2Players: z
    .array(z.object({name: z.string(), winRate: z.number()}))
    .describe('Los jugadores actualmente asignados al equipo 2, con sus tasas de victoria.'),
});
export type GetTeamRecommendationInput = z.infer<
  typeof GetTeamRecommendationInputSchema
>;

const GetTeamRecommendationOutputSchema = z.object({
  recommendation: z
    .string()
    .describe(
      'Una sugerencia sobre cómo equilibrar los equipos, considerando las tasas de victoria de los jugadores. Sugiere intercambios específicos de jugadores si es necesario.'
    ),
});
export type GetTeamRecommendationOutput = z.infer<
  typeof GetTeamRecommendationOutputSchema
>;

export async function getTeamRecommendation(
  input: GetTeamRecommendationInput
): Promise<GetTeamRecommendationOutput> {
  return getTeamRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'getTeamRecommendationPrompt',
  input: {schema: GetTeamRecommendationInputSchema},
  output: {schema: GetTeamRecommendationOutputSchema},
  prompt: `Eres un asistente de IA que ayuda a equilibrar los equipos en un juego.

  Basado en las composiciones actuales de los equipos y las tasas de victoria de los jugadores, sugiere una forma de equilibrar los equipos.
  Considera sugerir intercambios de jugadores específicos entre los equipos si es necesario para lograr un mejor equilibrio.

  Jugadores del Equipo 1:
  {{#each team1Players}}
  - {{name}} (Tasa de Victoria: {{winRate}})
  {{/each}}

  Jugadores del Equipo 2:
  {{#each team2Players}}
  - {{name}} (Tasa de Victoria: {{winRate}})
  {{/each}}
  `,
});

const getTeamRecommendationFlow = ai.defineFlow(
  {
    name: 'getTeamRecommendationFlow',
    inputSchema: GetTeamRecommendationInputSchema,
    outputSchema: GetTeamRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
